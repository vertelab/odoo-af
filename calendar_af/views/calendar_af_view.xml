<?xml version="1.0"?>
<odoo>
    <record id="af_generate_occasions" model="ir.actions.server">
        <field name="name">AF Generate Occasions</field>
        <field name="model_id" ref="base.model_ir_actions_server"/>
        <field name="state">code</field>
        <field name="code">competence = env['calendar.schedule.competence'].search([('ipf_id', '=', 'ded72445-e5d3-4e21-a356-aad200dac83d')])
start = datetime.datetime.strptime(("2020-04-01T00:00:00"), "%Y-%m-%dT%H:%M:%S")
stop = datetime.datetime.strptime(("2020-04-02T0:00:00"), "%Y-%m-%dT%H:%M:%S")
schedules = env['calendar.schedule'].search([('start', '>', start),('stop', '&lt;', stop),('competence', '=', competence.id)])

schedules.create_occasions()</field>
    </record>

    <record id="af_get_bookable_occasions" model="ir.actions.server">
        <field name="name">AF Get Bookable Occasion</field>
        <field name="model_id" ref="base.model_ir_actions_server"/>
        <field name="state">code</field>
        <field name="code">competence = env['calendar.schedule.competence'].search([('ipf_id', '=', 'ded72445-e5d3-4e21-a356-aad200dac83d')])
start = datetime.datetime.strptime(("2020-04-02T09:00:00"), "%Y-%m-%dT%H:%M:%S")
stop = datetime.datetime.strptime(("2020-04-02T10:30:00"), "%Y-%m-%dT%H:%M:%S")
occasions = env['calendar.occasion'].get_bookable_occasions(start, stop, competence, 'SPD', 5)
reservation = env['calendar.occasion'].reserve_occasion(occasions[0])</field>
    </record>

    <record id="af_calendar_cleanup" model="ir.actions.server">
        <field name="name">AF Calendar Cleanup</field>
        <field name="model_id" ref="base.model_ir_actions_server"/>
        <field name="state">code</field>
        <field name="code">unused_occasions = env['calendar.occasion'].search([('appointment_id','=',''), ('start','&lt;', datetime.datetime.now() - datetime.timedelta(days=14))])
unused_occasions.unlink()</field>
    </record>

    <record id="ir_cron_additional_times_autovacuum" model="ir.cron">
        <field name='name'>Auto-vacuum additional times</field>
        <field name='interval_number'>1</field>
        <field name='interval_type'>days</field>
        <field name="numbercall">-1</field>
        <field name="nextcall">2020-09-19 20:00:00</field>
        <field name="active" eval="True" />
        <field name="doall" eval="False" />
        <field name="code">model.autovacuum_additional_occasion()</field>
        <field name="state">code</field>
        <field name="model_id" ref="model_calendar_occasion" />
    </record>


    <record id="action_occasion_publish" model="ir.actions.server">
        <field name="name">AF Publish occasion</field>
        <field name="model_id" ref="calendar_af.model_calendar_occasion"/>
        <field name="binding_model_id" ref="calendar_af.model_calendar_occasion"/>
        <field name="binding_type">action</field>
        <field name="state">code</field>
        <field name="code">for rec in records:
  if rec.state == 'draft':
    res = rec.publish_occasion()
    if not res:
      raise Warning("One of your occasions is not a draft.")</field>
    </record>

    <record id="action_occasion_accept" model="ir.actions.server">
        <field name="name">AF Accept occasion</field>
        <field name="model_id" ref="calendar_af.model_calendar_occasion"/>
        <field name="binding_model_id" ref="calendar_af.model_calendar_occasion"/>
        <field name="binding_type">action</field>
        <field name="state">code</field>
        <field name="code">for rec in records:
  if rec.state == 'request':
    res = rec.accept_occasion()
    if not res:
      raise Warning("One of your occasions is not a request.")</field>
    </record>

    <record id="action_occasion_reject" model="ir.actions.server">
        <field name="name">AF Reject occasion</field>
        <field name="model_id" ref="calendar_af.model_calendar_occasion"/>
        <field name="binding_model_id" ref="calendar_af.model_calendar_occasion"/>
        <field name="binding_type">action</field>
        <field name="state">code</field>
        <field name="code">for rec in records:
  if rec.state in ['request', 'ok']:
    res = rec.reject_occasion()
    if not res:
      raise Warning("One of your occasions is not a request.")</field>
    </record>

    <record id="action_occasion_delete" model="ir.actions.server">
        <field name="name">AF Delete occasion</field>
        <field name="model_id" ref="calendar_af.model_calendar_occasion"/>
        <field name="binding_model_id" ref="calendar_af.model_calendar_occasion"/>
        <field name="binding_type">action</field>
        <field name="state">code</field>
        <field name="code">for rec in records:
  if not rec.appointment_id:
    res = rec.delete_occasion()
    if not res:
      raise Warning("One of your occasions is already booked")</field>
    </record>

    <menuitem name="Distans Meeting" id="menu_book_distans_meeting" parent="calendar.mail_menu_calendar" sequence="10" />
    <menuitem name="PDM" id="menu_pdm" parent="calendar.mail_menu_calendar" sequence="11" />
    <menuitem name="Local" id="menu_local" parent="calendar.mail_menu_calendar" sequence="12" />
    <menuitem name="Reports" id="menu_reports" parent="calendar.mail_menu_calendar" sequence="13" />
    <menuitem name="Administration" id="menu_admin" parent="calendar.mail_menu_calendar" sequence="20" />
</odoo>
